version: 2
jobs:
  build-and-release:
    docker:
      - image: circleci/golang:1.13.8
    steps:
      - checkout
      - run:
          name: "Check if a tag already exists for HVM_VERSION"
          command: |
            VERSION="v$(cat HVM_VERSION)"
            if [ "$(git tag -l ${VERSION})" = "${VERSION}" ]; then
                echo "Tag v$(cat HVM_VERSION) already exists. Halting job."
                circleci step halt
            fi
      - run:
          name: "Download and set up appimagetool"
          command: |
            cd ./appimage/
            wget "https://github.com/AppImage/AppImageKit/releases/download/continuous/appimagetool-x86_64.AppImage"
            chmod +x ./appimagetool-x86_64.AppImage
            
            # Can't execute AppImage directly because it requires FUSE, which is not available in this env.
            # So extract the AppImage and symlink its AppRun to ./appimagetool-x86_64.AppImage. This will
            # allow make-appimage.sh to work without changes.
            ./appimagetool-x86_64.AppImage --appimage-extract
            rm -f ./appimagetool-x86_64.AppImage
            ln -s ./squashfs-root/AppRun appimagetool-x86_64.AppImage   
      - run:
          name: "Build artifacts"
          command: |
            sudo apt-get install file
            cd ./appimage/
            ./make-appimage.sh
      - run:
          name: "Download and install ghr"
          command: |          
            go get -u github.com/tcnksm/ghr
            ghr -version
      - run:
          name: "Publish release"
          command: |
            VERSION="v$(cat ./HVM_VERSION)"
            RELEASE_BODY="Supported Tails versions: $(cut -d " " -f 1 < ./SUPPORTED_TAILS_VERSIONS | paste -s -d "," | sed "s/,/, /g")"
            echo "Publishing HiddenVM release: ${VERSION}"
            cd ./appimage/target
            ghr -t ${GITHUB_TOKEN} -u ${CIRCLE_PROJECT_USERNAME} -r ${CIRCLE_PROJECT_REPONAME} -c ${CIRCLE_SHA1} -n ${VERSION} -b "${RELEASE_BODY}" -recreate ${VERSION} ./release/
            
workflows:
  version: 2
  build-and-release:
    jobs:
      - build-and-release:
          filters:
            branches:
              only: master
              
